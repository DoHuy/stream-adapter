// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import context "context"

import mock "github.com/stretchr/testify/mock"

// Client is an autogenerated mock type for the Client type
type Client struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Client) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Produce provides a mock function with given fields: ctx, topic, key, value
func (_m *Client) Produce(ctx context.Context, topic string, key string, value []byte) error {
	ret := _m.Called(ctx, topic, key, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, []byte) error); ok {
		r0 = rf(ctx, topic, key, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ProduceWithPartition provides a mock function with given fields: ctx, topic, partition, key, value
func (_m *Client) ProduceWithPartition(ctx context.Context, topic string, partition int32, key string, value []byte) error {
	ret := _m.Called(ctx, topic, partition, key, value)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, int32, string, []byte) error); ok {
		r0 = rf(ctx, topic, partition, key, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
